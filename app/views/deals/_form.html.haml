= render :partial => 'shared/resource_error', locals: {resource: @deal}

= form_for @deal, html: { multipart: true, class: "editor-form row gt-3 dropzone" , data: { page: 'main-editor' }, autocomplete: "off" } do |form|
  .col-md-12
    .row
      .col-md-1
        -# #dropzone-previews-container.dropzone-previews
        -#   =resource_image(@deal.image, class: 'deal-preview-img img-thumbnail')
      .col-md-11
        .row
          .col-md-12
            .input-group.mb-3
              %span.input-group-text URL
              = form.url_field :url, class: "form-control"
          .col-md-12
            .input-group.mb-3
              %span.input-group-text Title
              = form.text_field :title, class: "form-control"
  .col-md-12
    .row
      .col-md-2
        =render partial: 'shared/dropzone_image', locals: { image: @deal.image, f: form}
      .col-md-10
        .row 
          .col-md-12 
            = form.label :body, class: "form-label"
            = form.rich_text_area :body, class: "form-control medium-editable  mt-2", autofocus: false
  .col-md-12.mt-4
    .row     
      .col-md-3
        .input-group.mb-3
          %span.input-group-text Price $
          = form.number_field :price, class: "form-control"
      .col-md-3
        .input-group.mb-3
          %span.input-group-text Retail Price $
          = form.number_field :retail_price, class: "form-control"
      .col-md-3
        .input-group.mb-3
          %span.input-group-text Discount %
          = form.number_field :discount, class: "form-control"
      .col-md-3
        .input-group.mb-3
          %span.input-group-text Expiration
          = form.date_field :expiration_date, class: "form-control"
  .row
    
    .col-md-3
      = form.label :store, class: "form-label"
      = form.select :store_id, Store.all.collect { |p| [ p.name, p.id ] }, { prompt: "Select a store" }, class: "form-select"
      -# =form.text_field :store_id, list: 'store_list'
      -# %datalist#store_list
      -#   = options_for_select(Store.all.pluck(:name, :id), @deal.store_name)
    .col-md-3
      = form.label :category, class: "form-label"
      = form.select :category_id, Category.all.collect { |p| [ p.name, p.id ] }, { prompt: "Select a store" }, class: "form-select select-picker"
    .col-md-6
      = form.label :tags, class: 'form-label'
      = form.text_field :all_tags, class: 'form-control tagsinput', 'data-role': 'tagsinput', value: tag_from_param(@deal)

  .col-md-12
    .col-md-4
      .input-group.mb-3
        %span.input-group-text Coupon
        = form.text_field :coupon, class: "form-control"


  - if @deal.new_record?
    .col-12.mt-4
      .form-check
        = form.check_box :auto_create_link
        = form.label :auto_create_link, class: 'form-check-label'

  = render 'meta_fields', f: form

  .col-12.mt-4
    .actions
      = form.submit 'Save', class: 'btn btn-primary'
      = form.submit 'Generate Image', class: 'btn btn-primary', name: 'generate_image'


- unless @deal.new_record?
  = form_with(url: create_link_deal_path(@deal), method: :post) do |form|
    = form.submit 'Create Link', class: 'btn btn-primary'

-if @deal.generated_image.present?
  =image_tag @deal.generated_image, class: 'image'



:javascript
  document.addEventListener('DOMContentLoaded', () => {
  const linkInput = document.getElementById('deal_url');
  const titleInput = document.getElementById('deal_title');

  linkInput.addEventListener('blur', () => {
    const url = linkInput.value.trim();

    if (url === '' || titleInput.value.trim() !== '') {
      return;
    }

    // Make an asynchronous request to the server to fetch the title
    fetch(`/fetch_url_title?link_url=${encodeURIComponent(url)}`)
      .then(response => response.text())
      .then(title => {
        // Update the deal title field with the fetched title
        if(titleInput.value.trim() === ''){
          titleInput.value = title;
        }
      })
      .catch(error => {
        console.error('Error fetching title:', error);
      });
    });
  });
